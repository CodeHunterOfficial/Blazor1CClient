@page "/students/add"
@inject IStudentService StudentService
@inject NavigationManager NavigationManager
@using Blazor1CClient.Models
@using Blazor1CClient.Services
@rendermode RenderMode.InteractiveServer

<h3>Add New Student</h3>

<EditForm Model="@newStudent" OnValidSubmit="HandleValidSubmit" FormName="formAddStudent">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="ФИО">Full Name</label>
        <InputText id="ФИО" @bind-Value="newStudent.ФИО" class="form-control" />
        <ValidationMessage For="@(() => newStudent.ФИО)" />
    </div>

    <div class="form-group">
        <label for="Курс">Course</label>
        <InputNumber id="Курс" @bind-Value="newStudent.Курс" class="form-control" />
        <ValidationMessage For="@(() => newStudent.Курс)" />
    </div>

    <div class="form-group">
        <label for="ДатаРождения">Date of Birth</label>
        <InputDate id="ДатаРождения" @bind-Value="newStudent.ДатаРождения" class="form-control" />
        <ValidationMessage For="@(() => newStudent.ДатаРождения)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private Student newStudent = new Student();

    private async Task HandleValidSubmit()
    {
        // Добавление нового студента через сервис
        var isSuccess = await StudentService.AddStudentAsync(newStudent);

        if (isSuccess)
        {
            // Перенаправление после успешного добавления студента
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Обработка ошибки (например, показать уведомление)
            Console.WriteLine("Ошибка при добавлении студента");
        }
    }
}